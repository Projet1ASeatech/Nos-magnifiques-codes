void gravity(char matrice[], int modif[], int numodif, int static[], int numstatic, int i, int j, int numite){
  if (atoi(matrice[i+1][j]) < atoi(matrice[i][j])){
    char temp = matrice[i+1][j];
    matrice[i+1][numc] = matrice[numl][numc];
    matrice[numl][numc] = temp;
    modif[numodif] = {numl+1,numc};
    numodif += 1;
  }
  else if (atoi(matrice[numl+1][numc+numite]) < atoi(matrice[numl][numc])){
    char temp = matrice[numl+1][numc+numite];
    matrice[numl+1][numc+numite] = matrice[numl][numc];
    matrice[numl][numc] = temp;
    modif[numodif] = {numl+1,numc+numite};
    numodif += 1;
  }
  else if (atoi(matrice[numl+1][numc-numite]) < atoi(matrice[numl][numc])){
    char temp = matrice[numl+1][numc-numite];
    matrice[numl+1][numc-numite] = matrice[numl][numc];
    matrice[numl][numc] = temp;
    modif[numodif] = {numl+1,numc-numite};
    numodif += 1;
  }
  else if (atoi(matrice[numl][numc+numite]) < atoi(matrice[numl][numc])){
    char temp = matrice[numl][numc+numite];
    matrice[numl][numc+numite] = matrice[numl][numc];
    matrice[numl][numc] = temp;
    modif[numodif] = {numl,numc+numite};
    numodif += 1;
  }
  else if (atoi(matrice[numl][numc-numite]) < atoi(matrice[numl][numc])){
    char temp = matrice[numl][numc-numite];
    matrice[numl][numc-numite] = matrice[numl][numc];
    matrice[numl][numc] = temp;
    modif[numodif] = {numl,numc-numite};
    numodif += 1;
  }
  else if{
    static[numstatic] = {numl,numc};
    numstatic += 1;
  }
}
