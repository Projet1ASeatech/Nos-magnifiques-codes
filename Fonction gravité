void gravity(char matrice[], int modif[], int numodif, int static[], int numstatic, int i, int j, int numite){
  if (atoi(matrice[i+1][j]) < atoi(matrice[i][j])){
    char temp = matrice[i+1][j];
    matrice[i+1][j] = matrice[i][j];
    matrice[i][j] = temp;
    modif[numodif] = {i+1,j};
    numodif += 1;
  }
  else if (atoi(matrice[i+1][j+numite]) < atoi(matrice[i][j])){
    char temp = matrice[i+1][j+numite];
    matrice[i+1][j+numite] = matrice[i][j];
    matrice[i][j] = temp;
    modif[numodif] = {i+1,j+numite};
    numodif += 1;
  }
  else if (atoi(matrice[i+1][j-numite]) < atoi(matrice[i][j])){
    char temp = matrice[i+1][j-numite];
    matrice[i+1][j-numite] = matrice[i][j];
    matrice[i][j] = temp;
    modif[numodif] = {i+1,j-numite};
    numodif += 1;
  }
  else if (atoi(matrice[i][j+numite]) < atoi(matrice[i][j])){
    char temp = matrice[i][j+numite];
    matrice[i][j+numite] = matrice[i][j];
    matrice[i][j] = temp;
    modif[numodif] = {i,j+numite};
    numodif += 1;
  }
  else if (atoi(matrice[i][j-numite]) < atoi(matrice[i][j])){
    char temp = matrice[i][j-numite];
    matrice[i][j-numite] = matrice[i][j];
    matrice[i][j] = temp;
    modif[numodif] = {i,j-numite};
    numodif += 1;
  }
  else if{
    static[numstatic] = {i,j};
    numstatic += 1;
  }
}
